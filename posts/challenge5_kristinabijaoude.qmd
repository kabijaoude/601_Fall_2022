---
title: "Challenge 5 Kristin Abijaoude"
author: "Kristin Abijaoude"
description: "Introduction to Visualization"
date: "10/19/2022"
format:
  html:
    toc: true
    code-copy: true
    code-tools: true
categories:
  - challenge_5
  - kristin_abijaoude
  - AB_NYC_19
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

## Challenge Overview

Today's challenge is to:

1)  read in a data set, and describe the data set using both words and any supporting information (e.g., tables, etc)
2)  tidy data (as needed, including sanity checks)
3)  mutate variables as needed (including sanity checks)
4)  create at least two univariate visualizations
   - try to make them "publication" ready
   - Explain why you choose the specific graph type
5)  Create at least one bivariate visualization
   - try to make them "publication" ready
   - Explain why you choose the specific graph type

[R Graph Gallery](https://r-graph-gallery.com/) is a good starting point for thinking about what information is conveyed in standard graph types, and includes example R code.

```{r}
library(readr)
AB_NYC_2019 <- read_csv("~/Documents/GitHub/Github Help/601_Fall_2022/posts/_data/AB_NYC_2019.csv")
View(AB_NYC_2019)
```

### Briefly describe the data

This dataset comprises of AirBnB listings in New York City by borough, neighborhood, hosts, and availability in the year of 2019. This CSV file has 48,895 rows and 16 columns. 

```{r}
print(dfSummary(AB_NYC_2019,
                        varnumbers = FALSE,
                        plain.ascii  = FALSE, 
                        style        = "grid", 
                        graph.magnif = 0.70, 
                        valid.col    = FALSE),
      method = 'render',
      table.classes = 'table-condensed')
```

## Tidy Data (as needed)

For the most part, the dataset is clean, but it needs a fixer-upper in some areas. First, let's rename the variables.

```{r}
AB_NYC_2019 <- AB_NYC_2019 %>%
  rename("Listing ID" = id,
         "Listing Name" = name,
         "Host ID" = host_id,
         "Host Name" = host_name,
         "Borough" = neighbourhood_group,
         "Neighborhood" = neighbourhood,
         "Room Type" = room_type,
         "Price per Night ($)" = price,
         "Minimum Number of Nights" = minimum_nights,
         "Number of Reviews" = number_of_reviews,
         "Last Review" = last_review,
         "Number of Reviews per Month" = reviews_per_month,
         "Calculated Host Listings Count" = calculated_host_listings_count,
         "Number of Days Available During the Year" = availability_365)
view(AB_NYC_2019)
```

Let's create a new variable called "Geolocation" by combining the latitude and longitude columns.

```{r}
AB_NYC_2019 <- unite(AB_NYC_2019, "latitude", "longitude", col = "Geolocation", sep = ":")

view(AB_NYC_2019)
```

Now, we are going to fill in missing data or NAs with the appropriate values, depending on the variable.

```{r}

```


Are there any variables that require mutation to be usable in your analysis stream? For example, do you need to calculate new values in order to graph them? Can string values be represented numerically? Do you need to turn any variables into factors and reorder for ease of graphics and visualization?

Document your work here.

```{r}

```

## Univariate Visualizations

<<<<<<< Updated upstream
=======
# one dot represents one AirBnB hosting
ggplot() +
  geom_polygon(data = AB_NYC_2019, aes(x=lat, y = long, group = long), fill="grey", alpha=0.3) +
  geom_point(data= AB_NYC_2019, aes(x=lat, y=long)) +
  ggtitle("AirBnb Hosting Locations in New York City") +
  theme_void()
```
>>>>>>> Stashed changes

## Bivariate Visualization(s)
Any additional comments?
