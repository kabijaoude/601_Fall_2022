---
title: "Challenge 5 Kristin Abijaoude"
author: "Kristin Abijaoude"
description: "Introduction to Visualization"
date: "10/19/2022"
format:
  html:
    toc: true
    code-copy: true
    code-tools: true
categories:
  - challenge_5
  - kristin_abijaoude
  - AB_NYC_19
---

```{r}
#| label: setup
#| warning: false
#| message: false

library(tidyverse)
library(ggplot2)
library(dplyr)
library(readr)

knitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)
```

```{r}
AB_NYC_2019 <- read_csv("_data/AB_NYC_2019.csv")
AB_NYC_2019
```


### Briefly describe the data

This dataset comprises of AirBnB listings in New York City by borough, neighborhood, hosts, and availability in the year of 2019. This CSV file has 48,895 rows and 16 columns. Below, we have the names of the variables in the dataset. 


```{r}
print(dfSummary(AB_NYC_2019,
                        varnumbers = FALSE,
                        plain.ascii  = FALSE, 
                        style        = "grid", 
                        graph.magnif = 0.70, 
                        valid.col    = FALSE),
      method = 'render',
      table.classes = 'table-condensed')
```


### Tidy Data (as needed)

For the most part, the dataset is clean, but it needs a fixer-upper in some areas. First, let's rename the variables.


```{r}
AB_NYC_tidy <- AB_NYC_2019 %>%
  rename("Listing ID" = id,
         "Listing Name" = name,
         "Host ID" = host_id,
         "Host Name" = host_name,
         "Borough" = neighbourhood_group,
         "Neighborhood" = neighbourhood,
         "Room Type" = room_type,
         "Price per Night ($)" = price,
         "Minimum Number of Nights" = minimum_nights,
         "Number of Reviews" = number_of_reviews,
         "Date of Last Review" = last_review,
         "Number of Reviews per Month" = reviews_per_month,
         "Calculated Host Listings Count" = calculated_host_listings_count,
         "Number of Days Available During the Year" = availability_365)
AB_NYC_tidy
```


Let's create a new variable called "Geolocation" by combining the latitude and longitude columns.


```{r}
AB_NYC_tidy <- unite(AB_NYC_tidy, "latitude", "longitude", col = "Geolocation", sep = ":")

AB_NYC_tidy

# it should come out like this

# Geolocation
# 40.64749:-73.97237 

# I didn't know how to add the N,S,E,W on the geolocations, so I left it as that
```


### Univariate Visualizations


```{r}
library(ggplot2)
AB_NYC_tidy %>%
  count(`Room Type`)

Room_Type <- data.frame(
  Room_Type =factor(c("Entire home or Apt","Private Room","Shared Room")),  
  Number_of_Hostings =c(25409,22326,1160)
  )
Room_Type

ggplot(data=Room_Type, 
       aes(x = Room_Type, 
           y = Number_of_Hostings,
           fill=Number_of_Hostings)) + 
  geom_bar(stat = "identity", fill ="lightblue") +
  geom_text(aes(label = Number_of_Hostings), 
            vjust=-0.5) +
  labs(x = "Room Type", 
       y = "Number of Hostings", 
       title  = "Types of Rooms available on AirBnB")
```

Bar graphs are incredibly helpful for univariates, or data involving only one variable. I used Room Types as an example to make my point. I apply the same coding with with variables Boroughs and Minimum Number of Nights.

The majority of AirBnB hostings are entire homes or apartment rooms and private rooms, with 25409 and 22326 hostings respectively, while shared rooms make up a much smaller share, with 1160 hostings.



```{r}
AB_NYC_tidy %>%
  count(`Borough`)

Borough <- data.frame(
  Borough =factor(c("Bronx","Brooklyn","Manhattan","Queens","Staten Island")),  
  Number_of_Hostings =c(1091,20104,21661,5666,373)
  )
Borough

ggplot(data=Borough, 
       aes(x = Borough, 
           y = Number_of_Hostings,
           fill=Number_of_Hostings)) + 
  geom_bar(stat = "identity", fill ="lightgreen") +
  geom_text(aes(label = Number_of_Hostings), 
            vjust=-0.5) +
  labs(x = "Boroughs", 
       y = "Number of Hostings", 
       title  = "Number of AirBnB Hostings by Borough")
```


to the surprise of almost nobody, the vast majority of AirBnB hostings are located in the boroughs of Manhattan and Brooklyn, due to the proximity of famous points of interests we all know of, such as Times Square. 


```{r}

AB_NYC_tidy %>%
  filter(`Minimum Number of Nights` == 1)%>%
  count(`Minimum Number of Nights`) +
  sum()

# Minimum Number of Nights n
# <dbl>                   <int>
# 1                       634
# 2                       563
# 3                       412

# I filtered out by minimum number of nights. For example == 1 night, == 2 nights, and so on...


Nights <- data.frame(
  Minimum_Number_of_Nights =factor(c("1 night","2 nights","3 nights","4 nights","5 night", "more than 5 nights")),  
  Number_of_Hostings =c(12720, 11696, 7999, 3303, 3034, 10143))

ggplot(data=Nights, aes(x= Minimum_Number_of_Nights, y=Number_of_Hostings, fill=Number_of_Hostings)) +
  geom_bar(stat="identity",fill="lightpink") +
  coord_flip()

# for whatever reason, R would give me an error when I try to replicate the same coding as the first two graphs above
```


Interesting, the majority of the hostings lets visitors sleep for 1 night. The more than 5 nights bar comprises of 6 nights to the highest value of 1,250 nights in a Greenwich village home in Manhattan. Very generous of the host Genevieve.

### Bivariate Visualization(s)


```{r}
# create data
x <- c(AB_NYC_tidy$`Minimum Number of Nights`)
y <- c(AB_NYC_tidy$`Price per Night ($)`)

# create scatterplot
ggplot(AB_NYC_tidy, 
       aes(x = x, 
           y = y,
           na.rm = TRUE)) +
  geom_point(color="cornflowerblue") +
  scale_y_continuous(label = scales::dollar) +
  labs(x = "Minium Numbers of Night",
       y = "Price Per Night ($)",
       title = "Minimum Number per Nights vs Price Per Night ($)",
       subtitle = "AirBnB Hostings in NYC")
```


Bivariates plots involve two variables, and it could be either categorical variable and numerical variable, both numerical variable, or both categorical variables. 

The scatterplot graph I coded above shows a correlation between Minimum Number of Nights and Price Per Night in a given hosting. The majority of those hostings are scattered in the bottom left side of the graph-- in other words, the majority allow visitors to stay a few nights in relatively less expensive (for New York City standards) places.



```{r}
# create data
NYC_Borough <- c(AB_NYC_tidy$Borough)
Price <- c(AB_NYC_tidy$`Price per Night ($)`)

# create violin plot
 ggplot(AB_NYC_tidy, aes(x=NYC_Borough, y=Price, fill=Price)) +
   scale_y_continuous(label = scales::dollar) +
  geom_violin()
```


This is a funny looking violin plot. The upper tip of each violin plot shows the outlier-- the most expensive hosting per borough. Again, to no one's surprise, the most expensive hostings are in Manhattan, Brooklyn, and Queens as well. 

Below, I plot out a map of New York ity with one dot representing one AirBnB location.


```{r}
# AirBnB locations in NYC
lat <- c(AB_NYC_2019$latitude)
long <- c(AB_NYC_2019$longitude)


# one dot represents one AirBnB hosting
ggplot() +
  geom_polygon(data = AB_NYC_2019, aes(x=lat, y = long, group = long), fill="grey", alpha=0.3) +
  geom_point(data= AB_NYC_2019, aes(x=lat, y=long)) +
  ggtitle("AirBnb Hosting Locations in New York City") +
  theme_void()

ggplot() + 
  geom_polygon(data=AB_NYC_2019, aes(x=long, y=lat),
                color="black", fill="lightblue" )
```

