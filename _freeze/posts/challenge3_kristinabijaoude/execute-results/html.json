{
<<<<<<< Updated upstream
  "hash": "08ad4323e54e3277163dd233701ef457",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3 with R\"\nauthor: \"Kristin Abijaoude\"\ndesription: \"Tidy Data: Pivoting\"\ndate: \"09/25/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - animal_weights\n  - eggs\n  - australian_marriage\n  - usa_households\n  - sce_labor\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\nToday, I will be tidying and pivoting eggs_tidy.csv. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\neggs<-read_csv(\"~/Documents/GitHub/Github Help/601_Fall_2022/posts/_data/eggs_tidy.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(eggs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 6\n  month     year large_half_dozen large_dozen extra_large_half_dozen extra_lar…¹\n  <chr>    <dbl>            <dbl>       <dbl>                  <dbl>       <dbl>\n1 January   2004             126         230                    132         230 \n2 February  2004             128.        226.                   134.        230 \n3 March     2004             131         225                    137         230 \n4 April     2004             131         225                    137         234.\n5 May       2004             131         225                    137         236 \n6 June      2004             134.        231.                   137         241 \n# … with abbreviated variable name ¹​extra_large_dozen\n```\n:::\n:::\n\n\nHere, we get the first 6 rows of the dataset eggs_tidy.csv. From what I see, this dataset records the average price of eggs sold per carton in from 2004 to 2013.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis_tibble(eggs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\nOkay, what a mess. This is difficult to read and interpret. Let's make it tidy first!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nas_tibble(eggs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 6\n   month      year large_half_dozen large_dozen extra_large_half_dozen extra_l…¹\n   <chr>     <dbl>            <dbl>       <dbl>                  <dbl>     <dbl>\n 1 January    2004             126         230                    132       230 \n 2 February   2004             128.        226.                   134.      230 \n 3 March      2004             131         225                    137       230 \n 4 April      2004             131         225                    137       234.\n 5 May        2004             131         225                    137       236 \n 6 June       2004             134.        231.                   137       241 \n 7 July       2004             134.        234.                   137       241 \n 8 August     2004             134.        234.                   137       241 \n 9 September  2004             130.        234.                   136.      241 \n10 October    2004             128.        234.                   136.      241 \n# … with 110 more rows, and abbreviated variable name ¹​extra_large_dozen\n```\n:::\n:::\n\nThis is much better to read than the original format, but work still needs to be done. \n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs %>%\n  gather(\"large_half_dozen\", \"large_dozen\", \"extra_large_half_dozen\", \"extra_large_dozen\", key = \"Eggs Sold\", value = \"Price sold\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 480 × 4\n   month      year `Eggs Sold`      `Price sold`\n   <chr>     <dbl> <chr>                   <dbl>\n 1 January    2004 large_half_dozen         126 \n 2 February   2004 large_half_dozen         128.\n 3 March      2004 large_half_dozen         131 \n 4 April      2004 large_half_dozen         131 \n 5 May        2004 large_half_dozen         131 \n 6 June       2004 large_half_dozen         134.\n 7 July       2004 large_half_dozen         134.\n 8 August     2004 large_half_dozen         134.\n 9 September  2004 large_half_dozen         130.\n10 October    2004 large_half_dozen         128.\n# … with 470 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\neggs_tibble<-tibble(eggs)\n\n#| label: Existing rows\nnrow(eggs_tibble)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 120\n```\n:::\n\n```{.r .cell-code}\n#| Existing columns \nncol(eggs_tibble)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n\n```{.r .cell-code}\n#| expected rows/cases\nnrow(eggs_tibble) * (ncol(eggs_tibble)-2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 480\n```\n:::\n\n```{.r .cell-code}\n#| expected columns\n4\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n:::\n\nFrom there, I can expect the new amount of rows and columns for the eggs dataset. \n\n## Pivot the Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs_new <- eggs %>%\n  mutate(\"Large Half Dozen per Cart Sold\" = large_half_dozen / 100,\n         \"Large Dozen per Cart Sold\" = large_dozen / 100,\n         \"Extra Large Half Dozen per Cart Sold\" = extra_large_half_dozen / 100,\n         \"Extra Large Dozen per Cart Sold\" = extra_large_dozen / 100)\n\n#| label: Replace Old Columns with New Ones\neggs_new1 <- select(eggs_new,-c(large_half_dozen, large_dozen, extra_large_half_dozen, extra_large_dozen))\nview(eggs_new1)\n```\n:::\n\nI calculated the price of one cart sold in dollars with the mutate() command and removed the old columns to make room with the new ones. \n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs_pivot <- eggs_new1%>%\n  pivot_longer(cols=contains(\"large\"),\n               names_to = \"size\",\n               values_to = \"price\"\n  )\nview(eggs_pivot)\n```\n:::\n\n\nOkay, that's (sort of) better! As you can see, the larger the eggs are, the more expensive they will be. The same concept applies to quantity, obviously, but you get more bang for your buck. \n",
    "supporting": [],
=======
  "hash": "a0d40763bec00275218b46a1bc08a165",
  "result": {
    "markdown": "---\ntitle: \"Challenge 3 with R\"\nauthor: \"Kristin Abijaoude\"\ndesription: \"Tidy Data: Pivoting\"\ndate: \"09/25/2022\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\ncategories:\n  - challenge_3\n  - eggs\n  - kristin_abijaoude\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(dplyr)\n\nknitr::opts_chunk$set(echo = TRUE, warning=FALSE, message=FALSE)\n```\n:::\n\n\nToday, I will be tidying and pivoting eggs_tidy.csv. \n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs<-read_csv(\"_data/eggs_tidy.csv\")\neggs\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 6\n   month      year large_half_dozen large_dozen extra_large_half_dozen extra_l…¹\n   <chr>     <dbl>            <dbl>       <dbl>                  <dbl>     <dbl>\n 1 January    2004             126         230                    132       230 \n 2 February   2004             128.        226.                   134.      230 \n 3 March      2004             131         225                    137       230 \n 4 April      2004             131         225                    137       234.\n 5 May        2004             131         225                    137       236 \n 6 June       2004             134.        231.                   137       241 \n 7 July       2004             134.        234.                   137       241 \n 8 August     2004             134.        234.                   137       241 \n 9 September  2004             130.        234.                   136.      241 \n10 October    2004             128.        234.                   136.      241 \n# … with 110 more rows, and abbreviated variable name ¹​extra_large_dozen\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(eggs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 6 × 6\n  month     year large_half_dozen large_dozen extra_large_half_dozen extra_lar…¹\n  <chr>    <dbl>            <dbl>       <dbl>                  <dbl>       <dbl>\n1 January   2004             126         230                    132         230 \n2 February  2004             128.        226.                   134.        230 \n3 March     2004             131         225                    137         230 \n4 April     2004             131         225                    137         234.\n5 May       2004             131         225                    137         236 \n6 June      2004             134.        231.                   137         241 \n# … with abbreviated variable name ¹​extra_large_dozen\n```\n:::\n:::\n\n\nHere, we get the first 6 rows of the dataset eggs_tidy.csv. From what I see, this dataset records the average price of eggs sold per carton in from 2004 to 2013.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nis_tibble(eggs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] TRUE\n```\n:::\n:::\n\n\nOkay, what a mess. This is difficult to read and interpret. Let's make it tidy first!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nas_tibble(eggs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 6\n   month      year large_half_dozen large_dozen extra_large_half_dozen extra_l…¹\n   <chr>     <dbl>            <dbl>       <dbl>                  <dbl>     <dbl>\n 1 January    2004             126         230                    132       230 \n 2 February   2004             128.        226.                   134.      230 \n 3 March      2004             131         225                    137       230 \n 4 April      2004             131         225                    137       234.\n 5 May        2004             131         225                    137       236 \n 6 June       2004             134.        231.                   137       241 \n 7 July       2004             134.        234.                   137       241 \n 8 August     2004             134.        234.                   137       241 \n 9 September  2004             130.        234.                   136.      241 \n10 October    2004             128.        234.                   136.      241 \n# … with 110 more rows, and abbreviated variable name ¹​extra_large_dozen\n```\n:::\n:::\n\nThis is much better to read than the original format, but work still needs to be done. \n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs %>%\n  gather(\"large_half_dozen\", \"large_dozen\", \"extra_large_half_dozen\", \"extra_large_dozen\", key = \"Eggs Sold\", value = \"Price sold\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 480 × 4\n   month      year `Eggs Sold`      `Price sold`\n   <chr>     <dbl> <chr>                   <dbl>\n 1 January    2004 large_half_dozen         126 \n 2 February   2004 large_half_dozen         128.\n 3 March      2004 large_half_dozen         131 \n 4 April      2004 large_half_dozen         131 \n 5 May        2004 large_half_dozen         131 \n 6 June       2004 large_half_dozen         134.\n 7 July       2004 large_half_dozen         134.\n 8 August     2004 large_half_dozen         134.\n 9 September  2004 large_half_dozen         130.\n10 October    2004 large_half_dozen         128.\n# … with 470 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\neggs_tibble<-tibble(eggs)\n\n#| label: Existing rows\nnrow(eggs_tibble)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 120\n```\n:::\n\n```{.r .cell-code}\n#| Existing columns \nncol(eggs_tibble)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 6\n```\n:::\n\n```{.r .cell-code}\n#| expected rows/cases\nnrow(eggs_tibble) * (ncol(eggs_tibble)-2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 480\n```\n:::\n\n```{.r .cell-code}\n#| expected columns\n4\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] 4\n```\n:::\n:::\n\nFrom there, I can expect the new amount of rows and columns for the eggs dataset. \n\n## Pivot the Data\n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs_new <- eggs %>%\n  mutate(\"Large Half Dozen per Cart Sold\" = large_half_dozen / 100,\n         \"Large Dozen per Cart Sold\" = large_dozen / 100,\n         \"Extra Large Half Dozen per Cart Sold\" = extra_large_half_dozen / 100,\n         \"Extra Large Dozen per Cart Sold\" = extra_large_dozen / 100)\n\n#| label: Replace Old Columns with New Ones\neggs_new1 <- select(eggs_new,-c(large_half_dozen, large_dozen, extra_large_half_dozen, extra_large_dozen))\neggs_new1\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 120 × 6\n   month      year `Large Half Dozen per Cart Sold` Large Doze…¹ Extra…² Extra…³\n   <chr>     <dbl>                            <dbl>        <dbl>   <dbl>   <dbl>\n 1 January    2004                             1.26         2.3     1.32    2.3 \n 2 February   2004                             1.28         2.26    1.34    2.3 \n 3 March      2004                             1.31         2.25    1.37    2.3 \n 4 April      2004                             1.31         2.25    1.37    2.35\n 5 May        2004                             1.31         2.25    1.37    2.36\n 6 June       2004                             1.34         2.31    1.37    2.41\n 7 July       2004                             1.34         2.34    1.37    2.41\n 8 August     2004                             1.34         2.34    1.37    2.41\n 9 September  2004                             1.30         2.34    1.36    2.41\n10 October    2004                             1.28         2.34    1.36    2.41\n# … with 110 more rows, and abbreviated variable names\n#   ¹​`Large Dozen per Cart Sold`, ²​`Extra Large Half Dozen per Cart Sold`,\n#   ³​`Extra Large Dozen per Cart Sold`\n```\n:::\n:::\n\nI calculated the price of one cart sold in dollars with the mutate() command and removed the old columns to make room with the new ones. \n\n\n::: {.cell}\n\n```{.r .cell-code}\neggs_pivot <- eggs_new1%>%\n  pivot_longer(cols=contains(\"large\"),\n               names_to = \"size\",\n               values_to = \"price\"\n  )\neggs_pivot\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 480 × 4\n   month     year size                                 price\n   <chr>    <dbl> <chr>                                <dbl>\n 1 January   2004 Large Half Dozen per Cart Sold        1.26\n 2 January   2004 Large Dozen per Cart Sold             2.3 \n 3 January   2004 Extra Large Half Dozen per Cart Sold  1.32\n 4 January   2004 Extra Large Dozen per Cart Sold       2.3 \n 5 February  2004 Large Half Dozen per Cart Sold        1.28\n 6 February  2004 Large Dozen per Cart Sold             2.26\n 7 February  2004 Extra Large Half Dozen per Cart Sold  1.34\n 8 February  2004 Extra Large Dozen per Cart Sold       2.3 \n 9 March     2004 Large Half Dozen per Cart Sold        1.31\n10 March     2004 Large Dozen per Cart Sold             2.25\n# … with 470 more rows\n```\n:::\n:::\n\n\nOkay, that's (sort of) better! As you can see, the larger the eggs are, the more expensive they will be. The same concept applies to quantity, obviously, but you get more bang for your buck. \n",
    "supporting": [
      "challenge3_kristinabijaoude_files"
    ],
>>>>>>> Stashed changes
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}